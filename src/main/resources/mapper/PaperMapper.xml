<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wale.exam.dao.PaperMapper">
  <resultMap id="BaseResultMap" type="com.wale.exam.bean.Paper">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="paper_name" jdbcType="VARCHAR" property="paperName" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="duration_time" jdbcType="INTEGER" property="durationTime" />
    <result column="question_count" jdbcType="INTEGER" property="questionCount" />
    <result column="is_encry" jdbcType="INTEGER" property="isEncry" />
    <result column="invi_code" jdbcType="VARCHAR" property="inviCode" />
    <result column="creater_id" jdbcType="INTEGER" property="createrId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_Example">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, paper_name, total_score, create_time, start_time, end_time, duration_time, question_count,
    is_encry, invi_code, creater_id
  </sql>
  <select id="selectByExample" parameterType="com.wale.exam.bean.PaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam_paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectLastRecordByCreaterId" parameterType="com.wale.exam.bean.PaperExample" resultType="java.lang.Integer">
    select
    max(id)
    from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wale.exam.bean.PaperExample">
    delete from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wale.exam.bean.Paper">
    insert into exam_paper (id, paper_name, total_score,
      create_time, start_time, end_time,
      duration_time, question_count, is_encry,
      invi_code, creater_id)
    values (#{id,jdbcType=INTEGER}, #{paperName,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{durationTime,jdbcType=INTEGER}, #{questionCount,jdbcType=INTEGER}, #{isEncry,jdbcType=INTEGER},
      #{inviCode,jdbcType=VARCHAR}, #{createrId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wale.exam.bean.Paper">
    insert into exam_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paperName != null">
        paper_name,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="durationTime != null">
        duration_time,
      </if>
      <if test="questionCount != null">
        question_count,
      </if>
      <if test="isEncry != null">
        is_encry,
      </if>
      <if test="inviCode != null">
        invi_code,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paperName != null">
        #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="durationTime != null">
        #{durationTime,jdbcType=INTEGER},
      </if>
      <if test="questionCount != null">
        #{questionCount,jdbcType=INTEGER},
      </if>
      <if test="isEncry != null">
        #{isEncry,jdbcType=INTEGER},
      </if>
      <if test="inviCode != null">
        #{inviCode,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wale.exam.bean.PaperExample" resultType="java.lang.Long">
    select count(*) from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleAndPage"  parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_Example" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    LIMIT #{before},#{after}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_paper
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.paperName != null">
        paper_name = #{record.paperName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.durationTime != null">
        duration_time = #{record.durationTime,jdbcType=INTEGER},
      </if>
      <if test="record.questionCount != null">
        question_count = #{record.questionCount,jdbcType=INTEGER},
      </if>
      <if test="record.isEncry != null">
        is_encry = #{record.isEncry,jdbcType=INTEGER},
      </if>
      <if test="record.inviCode != null">
        invi_code = #{record.inviCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        creater_id = #{record.createrId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_paper
    set id = #{record.id,jdbcType=INTEGER},
      paper_name = #{record.paperName,jdbcType=VARCHAR},
      total_score = #{record.totalScore,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      duration_time = #{record.durationTime,jdbcType=INTEGER},
      question_count = #{record.questionCount,jdbcType=INTEGER},
      is_encry = #{record.isEncry,jdbcType=INTEGER},
      invi_code = #{record.inviCode,jdbcType=VARCHAR},
      creater_id = #{record.createrId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wale.exam.bean.Paper">
    update exam_paper
    <set>
      <if test="paperName != null">
        paper_name = #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="durationTime != null">
        duration_time = #{durationTime,jdbcType=INTEGER},
      </if>
      <if test="questionCount != null">
        question_count = #{questionCount,jdbcType=INTEGER},
      </if>
      <if test="isEncry != null">
        is_encry = #{isEncry,jdbcType=INTEGER},
      </if>
      <if test="inviCode != null">
        invi_code = #{inviCode,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wale.exam.bean.Paper">
    update exam_paper
    set paper_name = #{paperName,jdbcType=VARCHAR},
      total_score = #{totalScore,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      duration_time = #{durationTime,jdbcType=INTEGER},
      question_count = #{questionCount,jdbcType=INTEGER},
      is_encry = #{isEncry,jdbcType=INTEGER},
      invi_code = #{inviCode,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
